name: Docker Desktop (LXDE) + VNC + Tailscale (No-Hang)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth key (paste here)"
        required: true
      vnc_password:
        description: "VNC password (for viewer auth)"
        required: false
        default: "runner"
      resolution:
        description: "Desktop resolution (e.g., 1366x768)"
        required: false
        default: "1366x768"
      runtime_minutes:
        description: "Workflow runtime (max 355)"
        required: false
        default: "355"

permissions:
  contents: read

jobs:
  desktop:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      TS_AUTHKEY: ${{ inputs.ts_authkey }}
      VNC_PASSWORD: ${{ inputs.vnc_password }}
      RESOLUTION: ${{ inputs.resolution }}
      RUNTIME_MINUTES: ${{ inputs.runtime_minutes }}
      HOSTNAME: dockervnc-${{ github.run_id }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Start Docker desktop+VNC container"
        shell: bash
        run: |
          set -eux
          # Pull lightweight Ubuntu desktop with built-in VNC
          docker pull dorowu/ubuntu-desktop-lxde-vnc:latest
          # Run container exposing VNC on host port 5901
          docker run -d --name desktop \
            -e VNC_PASSWORD="${VNC_PASSWORD}" \
            -e RESOLUTION="${RESOLUTION}" \
            -p 5901:5901 \
            dorowu/ubuntu-desktop-lxde-vnc:latest
          # Health check: wait for VNC to listen
          for i in $(seq 1 30); do
            ss -lnt '( sport = :5901 )' | grep -q 5901 && { echo "VNC is listening on 5901"; break; }
            sleep 1
          done

      - name: "Install and start Tailscale (userspace)"
        shell: bash
        run: |
          set -eux
          curl -fsSL https://tailscale.com/install.sh | sh
          # Run tailscaled in userspace (no kernel tun required on GH runners)
          sudo nohup /usr/sbin/tailscaled \
            --state=mem: \
            --socket=/run/tailscaled.sock \
            --tun=userspace-networking \
            >/tmp/tailscaled.log 2>&1 &
          # Bring node up
          sudo -E tailscale up \
            --reset \
            --authkey="${TS_AUTHKEY}" \
            --hostname="${HOSTNAME}" \
            --ssh
          tailscale ip || true

      - name: "Connection info"
        shell: bash
        run: |
          set -eux
          TS_IP4="$(tailscale ip -4 | head -n1 || echo N/A)"
          echo "===== CONNECTION INFO ====="
          echo "Tailscale IPv4 : ${TS_IP4}"
          echo "VNC endpoint   : ${TS_IP4}:5901"
          echo "VNC password   : ${VNC_PASSWORD}"
          echo "Resolution     : ${RESOLUTION}"
          echo "Viewer hint    : Use TigerVNC/RealVNC to ${TS_IP4}:5901"
          echo "==========================="

      - name: "Keep alive"
        shell: bash
        run: |
          set -eux
          mins="${RUNTIME_MINUTES:-355}"
          if ! [[ "$mins" =~ ^[0-9]+$ ]]; then mins=355; fi
          [ "$mins" -gt 355 ] && mins=355
          echo "Keeping alive for ${mins} minutes..."
          for i in $(seq 1 "${mins}"); do
            echo "Minute $i / ${mins} - $(date -u +%F_%T)"
            sleep 60
          done

      - name: "Cleanup"
        if: always()
        shell: bash
        run: |
          set -eux
          docker rm -f desktop || true
