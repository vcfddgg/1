name: Ubuntu VNC Desktop (Jammy ‚Äì XFCE + noVNC + Cloudflare + Python)

on:
  workflow_dispatch:
    inputs:
      vnc_password:
        description: "VNC password (6-8 chars; default vnc12345)"
        required: false
        default: "vnc12345"
      expose_with_cloudflared:
        description: "Expose noVNC via Cloudflare (no account needed): true/false"
        required: false
        default: "true"

jobs:
  vnc:
    runs-on: ubuntu-22.04
    timeout-minutes: 370
    env:
      USERNAME: Bullettemporary
      PASSWORD: Bullet@12345
      RUNTIME_MINUTES: 355
      VNC_DISPLAY: :1
      VNC_GEOMETRY: 1366x768
      VNC_DEPTH: 24

    steps:
      - name: Install XFCE + TigerVNC + noVNC
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies dbus-x11 dbus-user-session x11-xserver-utils \
            tigervnc-standalone-server tigervnc-common tigervnc-tools \
            novnc websockify curl jq unzip xorg locales

          sudo locale-gen en_US.UTF-8
          echo 'LANG=en_US.UTF-8' | sudo tee /etc/default/locale >/dev/null

          if ! id -u "$USERNAME" >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash "$USERNAME"
          fi
          echo "$USERNAME:$PASSWORD" | sudo chpasswd
          echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$USERNAME >/dev/null

          U=$(id -u "$USERNAME")
          sudo install -d -m 700 -o "$USERNAME" -g "$USERNAME" "/run/user/$U"

          sudo -u "$USERNAME" mkdir -p /home/$USERNAME/.vnc
          sudo bash -c 'printf "%s\n" \
            "#!/bin/sh" \
            "unset SESSION_MANAGER" \
            "unset DBUS_SESSION_BUS_ADDRESS" \
            "export LANG=en_US.UTF-8" \
            "export LC_ALL=en_US.UTF-8" \
            "export XDG_CONFIG_DIRS=/etc/xdg:/etc" \
            "export DESKTOP_SESSION=xfce" \
            "export XDG_CURRENT_DESKTOP=XFCE" \
            "exec dbus-run-session -- startxfce4" \
            > /home/'"$USERNAME"'/.vnc/xstartup'
          sudo chmod +x /home/$USERNAME/.vnc/xstartup
          sudo chown -R "$USERNAME:$USERNAME" /home/$USERNAME/.vnc

          VPASS="${{ inputs.vnc_password }}"
          [ -z "$VPASS" ] && VPASS="vnc12345"
          echo "$VPASS" | head -c 8 | sudo -u "$USERNAME" bash -c "vncpasswd -f > /home/$USERNAME/.vnc/passwd"
          sudo chmod 600 /home/$USERNAME/.vnc/passwd

          sudo -u "$USERNAME" vncserver "$VNC_DISPLAY" -geometry "$VNC_GEOMETRY" -depth "$VNC_DEPTH"
          nohup websockify --web=/usr/share/novnc 6080 localhost 5901 >/tmp/novnc.log 2>&1 &

          echo "‚úÖ VNC server on 5901; noVNC on http://127.0.0.1:6080/"

      - name: Optional ‚Äì Expose noVNC via Cloudflare (no account needed)
        if: ${{ inputs.expose_with_cloudflared == 'true' }}
        shell: bash
        run: |
          set -e
          curl -sSL -o /tmp/cloudflared.tgz https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.tgz
          tar -xzf /tmp/cloudflared.tgz -C /tmp
          chmod +x /tmp/cloudflared
          nohup /tmp/cloudflared tunnel --url http://localhost:6080 >/tmp/cloudflared.log 2>&1 &
          for i in {1..20}; do
            URL=$(grep -Eo 'https://[-a-z0-9.]+trycloudflare.com' /tmp/cloudflared.log | tail -n1 || true)
            [ -n "$URL" ] && echo "PUBLIC_NOVNC_URL=$URL" | tee -a $GITHUB_ENV && echo "üåê $URL" && break
            sleep 2
          done

      - name: Install Python 3 + pip
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-venv python3-dev build-essential
          python3 -m pip install --upgrade pip wheel setuptools

      - name: Connection info
        shell: bash
        run: |
          echo "---------------------------------------------"
          echo "User: $USERNAME / Pass: $PASSWORD"
          echo "VNC password: (first 8 chars) '${{ inputs.vnc_password }}'"
          echo "noVNC local:  http://127.0.0.1:6080/"
          if [ -n "${PUBLIC_NOVNC_URL:-}" ]; then
            echo "noVNC public: ${PUBLIC_NOVNC_URL}"
          fi
          echo "---------------------------------------------"

      - name: Keep alive ~6 hours
        shell: bash
        run: |
          END=$(( $(date +%s) + 60 * ${RUNTIME_MINUTES} ))
          while [ $(date +%s) -lt $END ]; do
            echo "running $(date +%T)"
            sleep 60
          done

      - name: Logs on failure
        if: failure()
        shell: bash
        run: |
          echo "--- /tmp/novnc.log ---"; tail -n 200 /tmp/novnc.log || true
          echo "--- /tmp/cloudflared.log ---"; tail -n 200 /tmp/cloudflared.log || true
