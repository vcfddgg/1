name: Setup XFCE + VNC on GitHub Runner (with Tailscale)

on:
  workflow_dispatch:
    inputs:
      tailscale_authkey:
        description: "Tailscale auth key (ephemeral or reusable) — no Bearer"
        required: true
        default: ""
      vnc_password:
        description: "VNC password (first 8 chars used; default 'runner')"
        required: false
        default: "runner"
      runtime_minutes:
        description: "Keep alive minutes (5–360; default 355)"
        required: false
        default: "355"

permissions:
  contents: read

jobs:
  setup-gui-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    env:
      USERNAME: runner
      PASSWORD: runner
      HOSTNAME_PREFIX: gh-xfce-vnc
      VNC_DISPLAY: ":1"
      VNC_GEOMETRY: "1280x800"
      VNC_DEPTH: "24"

    steps:
      - name: Ensure runner user has sudo and password
        shell: bash
        run: |
          set -e
          echo "${USERNAME}:${PASSWORD}" | sudo chpasswd
          echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${USERNAME} >/dev/null

      - name: Install XFCE + TigerVNC
        shell: bash
        run: |
          set -e
          sudo apt-get update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -qq \
            xfce4 xfce4-goodies xfce4-terminal dbus-x11 dbus-user-session xorg \
            tigervnc-standalone-server tigervnc-common tigervnc-tools locales
          sudo locale-gen en_US.UTF-8

          # Set VNC password (TigerVNC uses first 8 chars)
          VPASS="${{ inputs.vnc_password }}"
          if [ -z "$VPASS" ]; then VPASS="${PASSWORD}"; fi
          sudo -u "${USERNAME}" mkdir -p "/home/${USERNAME}/.vnc"
          printf "%s" "$VPASS" | head -c 8 | sudo -u "${USERNAME}" bash -lc 'vncpasswd -f > ~/.vnc/passwd'
          sudo chmod 600 "/home/${USERNAME}/.vnc/passwd"

          # Write xstartup without heredoc (YAML-safe)
          sudo -u "${USERNAME}" mkdir -p "/home/${USERNAME}/.vnc"
          sudo bash -c "printf '%s\n' \
            '#!/bin/sh' \
            'unset SESSION_MANAGER' \
            'unset DBUS_SESSION_BUS_ADDRESS' \
            'export LANG=en_US.UTF-8' \
            'export LC_ALL=en_US.UTF-8' \
            'export XDG_CONFIG_DIRS=/etc/xdg:/etc' \
            'export DESKTOP_SESSION=xfce' \
            'export XDG_CURRENT_DESKTOP=XFCE' \
            'exec dbus-run-session -- startxfce4' \
            > /home/${USERNAME}/.vnc/xstartup"
          sudo chmod +x "/home/${USERNAME}/.vnc/xstartup"
          sudo chown -R "${USERNAME}:${USERNAME}" "/home/${USERNAME}/.vnc"

      - name: Install & bring up Tailscale
        shell: bash
        env:
          TS_AUTHKEY: ${{ inputs.tailscale_authkey }}
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sudo sh
          HN="${HOSTNAME_PREFIX}-${GITHUB_RUN_ID}"
          sudo tailscale logout || true
          sudo tailscale up --authkey "${TS_AUTHKEY}" --hostname "${HN}" --accept-dns=true --accept-routes=true
          TS_IP=$(tailscale ip -4 | head -n1 || true)
          echo "TS_IP=${TS_IP}" >> "$GITHUB_ENV"

      - name: Start VNC and show connection info
        shell: bash
        run: |
          set -e
          sudo -u "${USERNAME}" vncserver "${VNC_DISPLAY}" -geometry "${VNC_GEOMETRY}" -depth "${VNC_DEPTH}" -localhost no
          echo "==============================================="
          echo " XFCE + VNC is running"
          echo " Linux user     : ${USERNAME} / ${PASSWORD}"
          echo " VNC password   : ${VNC_PASSWORD:-${{ inputs.vnc_password }}}"
          echo " Display        : ${VNC_DISPLAY} (port 5901)"
          echo " Geometry       : ${VNC_GEOMETRY} / depth ${VNC_DEPTH}"
          echo " Tailscale IP   : ${TS_IP:-<not ready>}"
          echo
          echo " Connect using any VNC client to:"
          echo "     ${TS_IP}:5901   (client must be on same Tailscale tailnet)"
          echo "==============================================="

      - name: Keep alive
        shell: bash
        run: |
          R="${{ inputs.runtime_minutes }}"
          if ! echo "$R" | grep -Eq '^[0-9]+$'; then R=355; fi
          if [ "$R" -lt 5 ] || [ "$R" -gt 360 ]; then R=355; fi
          END=$(( $(date +%s) + 60*R ))
          while [ "$(date +%s)" -lt "$END" ]; do
            if pgrep -x Xtigervnc >/dev/null; then
              echo "[ $(date +%T) ] VNC alive • TS ${TS_IP:-n/a}"
            else
              echo "[ $(date +%T) ] VNC not running, restarting..."
              sudo -u "${USERNAME}" vncserver "${VNC_DISPLAY}" -geometry "${VNC_GEOMETRY}" -depth "${VNC_DEPTH}" -localhost no || true
            fi
            sleep 60
          done
