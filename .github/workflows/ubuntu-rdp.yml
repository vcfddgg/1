name: Xfce + Tailscale + VNC (Fast v9, YAML-safe)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth key (paste here)"
        required: true
      username:
        description: "Linux username for desktop login"
        required: false
        default: "runner"
      password:
        description: "Password for the user and VNC"
        required: false
        default: "runner"
      runtime_minutes:
        description: "Workflow runtime (max 355)"
        required: false
        default: "355"

permissions:
  contents: read

jobs:
  gui-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      USERNAME: ${{ inputs.username }}
      PASSWORD: ${{ inputs.password }}
      TS_AUTHKEY: ${{ inputs.ts_authkey }}
      RUNTIME_MINUTES: ${{ inputs.runtime_minutes }}
      HOSTNAME: xfce-${{ github.run_id }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Install minimal desktop, VNC, tools"
        shell: bash
        run: |
          set -eux
          echo "${USERNAME}:${PASSWORD}" | sudo chpasswd
          echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${USERNAME} >/dev/null
          sudo apt-get update
          # Lightweight Xfce stack + Xorg + VNC + Xvfb
          sudo apt-get install -y \
            xfce4-session xfce4-panel xfce4-terminal xfdesktop4 \
            xorg dbus-x11 tigervnc-standalone-server xvfb \
            curl jq net-tools x11-xserver-utils

      - name: "Start Xvfb display :99"
        shell: bash
        run: |
          set -eux
          sudo Xvfb :99 -screen 0 1366x768x24 >/tmp/xvfb.log 2>&1 &
          echo "DISPLAY=:99" | sudo tee -a /etc/environment >/dev/null
          export DISPLAY=:99
          sleep 2

      - name: "Configure and start VNC"
        shell: bash
        run: |
          set -eux
          # VNC password store
          sudo -u "${USERNAME}" mkdir -p "/home/${USERNAME}/.vnc"
          sudo -u "${USERNAME}" bash -lc "printf '%s\n%s\n\n' '${PASSWORD}' '${PASSWORD}' | vncpasswd"
          sudo -u "${USERNAME}" chmod 600 "/home/${USERNAME}/.vnc/passwd"

          # xstartup script (no heredocs)
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "#!/bin/sh" > ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "unset SESSION_MANAGER" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "unset DBUS_SESSION_BUS_ADDRESS" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "export DISPLAY=:99" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "xfce4-session &" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" chmod +x "/home/${USERNAME}/.vnc/xstartup"

          # Start VNC on :1 (port 5901)
          sudo -u "${USERNAME}" vncserver -kill :1 || true
          sudo -u "${USERNAME}" vncserver :1 -geometry 1366x768 -localhost no

      - name: "Install and start Tailscale"
        shell: bash
        run: |
          set -eux
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo nohup /usr/sbin/tailscaled --state=mem: --socket=/run/tailscaled.sock >/tmp/tailscaled.log 2>&1 &
          sudo -E tailscale up --reset --authkey="${TS_AUTHKEY}" --hostname="${HOSTNAME}" --ssh
          tailscale ip || true

      - name: "Connection info"
        shell: bash
        run: |
          ts_ip4="$(tailscale ip -4 | head -n1 || echo N/A)"
          echo "===== CONNECTION INFO ====="
          echo "Tailscale IPv4: ${ts_ip4}"
          echo "User: ${USERNAME}"
          echo "Password: (your workflow password)"
          echo "VNC: ${ts_ip4}:5901 (display :1)"
          echo "==========================="

      - name: "Keep alive"
        shell: bash
        run: |
          mins="${RUNTIME_MINUTES:-355}"
          echo "Keeping alive for ${mins} minutes..."
          for i in $(seq 1 "${mins}"); do
            echo "Minute $i / ${mins} - $(date -u +%F_%T)"
            sleep 60
          done

      - name: "Cleanup"
        if: always()
        shell: bash
        run: |
          sudo -u "${USERNAME}" vncserver -kill :1 || true
