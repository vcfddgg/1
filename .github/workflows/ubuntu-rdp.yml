name: Xfce + Tailscale + VNC and xRDP (Stable v7)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth key (paste here)"
        required: true
      username:
        description: "Linux username for desktop login"
        required: false
        default: "runner"
      password:
        description: "Password for the user, VNC and xRDP"
        required: false
        default: "runner"
      enable_vnc:
        description: "Enable TigerVNC server"
        type: boolean
        default: true
      enable_xrdp:
        description: "Enable xRDP server"
        type: boolean
        default: true
      runtime_minutes:
        description: "Workflow runtime (max 355)"
        required: false
        default: "355"

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  gui-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      USERNAME: ${{ inputs.username }}
      PASSWORD: ${{ inputs.password }}
      TS_AUTHKEY: ${{ inputs.ts_authkey }}
      ENABLE_VNC_IN: ${{ inputs.enable_vnc }}
      ENABLE_XRDP_IN: ${{ inputs.enable_xrdp }}
      RUNTIME_MINUTES_IN: ${{ inputs.runtime_minutes }}
      HOSTNAME: xfce-${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Normalize inputs
        id: cfg
        run: |
          set -euo pipefail
          # runtime
          runtime="${RUNTIME_MINUTES_IN:-355}"
          if ! [[ "$runtime" =~ ^[0-9]+$ ]]; then runtime=355; fi
          if [ "$runtime" -gt 355 ]; then runtime=355; fi
          echo "runtime=$runtime" >> "$GITHUB_OUTPUT"
          # booleans -> 'true'/'false'
          nvnc="${ENABLE_VNC_IN}"; case "$nvnc" in true|True|1) nvnc=true ;; *) nvnc=false ;; esac
          nxrdp="${ENABLE_XRDP_IN}"; case "$nxrdp" in true|True|1) nxrdp=true ;; *) nxrdp=false ;; esac
          echo "enable_vnc=$nvnc"   >> "$GITHUB_OUTPUT"
          echo "enable_xrdp=$nxrdp" >> "$GITHUB_OUTPUT"

      - name: Install desktop and tools
        run: |
          set -euxo pipefail
          echo "${USERNAME}:${PASSWORD}" | sudo chpasswd
          echo "${USERNAME} ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/${USERNAME} >/dev/null
          sudo apt-get update
          sudo apt-get install -y xfce4 xfce4-goodies tigervnc-standalone-server xrdp xorgxrdp xvfb dbus-x11 curl jq net-tools x11-xserver-utils

      - name: Start Xvfb display :99
        run: |
          set -euxo pipefail
          sudo Xvfb :99 -screen 0 1366x768x24 >/tmp/xvfb.log 2>&1 &
          echo "DISPLAY=:99" | sudo tee -a /etc/environment >/dev/null
          export DISPLAY=:99
          sleep 2

      - name: Configure xRDP (Xfce)
        if: ${{ steps.cfg.outputs.enable_xrdp == 'true' }}
        run: |
          set -euxo pipefail
          sudo adduser "${USERNAME}" ssl-cert || true
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "startxfce4" > ~/.xsession'
          # ensure startwm.sh starts Xfce (avoid black screen)
          sudo sed -i 's/^test -r/#&/' /etc/xrdp/startwm.sh
          printf "%s\n" "unset DBUS_SESSION_BUS_ADDRESS" | sudo tee -a /etc/xrdp/startwm.sh >/dev/null
          printf "%s\n" "unset XDG_RUNTIME_DIR"        | sudo tee -a /etc/xrdp/startwm.sh >/dev/null
          printf "%s\n" "export DISPLAY=:99"           | sudo tee -a /etc/xrdp/startwm.sh >/dev/null
          printf "%s\n" "startxfce4 &"                 | sudo tee -a /etc/xrdp/startwm.sh >/dev/null
          printf "%s\n" "wait"                         | sudo tee -a /etc/xrdp/startwm.sh >/dev/null
          sudo systemctl enable xrdp || true
          sudo systemctl restart xrdp || true

      - name: Configure VNC (Xfce + Xvfb)
        if: ${{ steps.cfg.outputs.enable_vnc == 'true' }}
        run: |
          set -euxo pipefail
          sudo -u "${USERNAME}" mkdir -p "/home/${USERNAME}/.vnc"
          # VNC password
          sudo -u "${USERNAME}" bash -lc "printf '%s\n%s\n\n' '${PASSWORD}' '${PASSWORD}' | vncpasswd"
          sudo -u "${USERNAME}" chmod 600 "/home/${USERNAME}/.vnc/passwd"
          # xstartup that uses the pre-started Xvfb
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "#!/bin/sh" > ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "unset SESSION_MANAGER" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "unset DBUS_SESSION_BUS_ADDRESS" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "export DISPLAY=:99" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" bash -lc 'printf "%s\n" "startxfce4 &" >> ~/.vnc/xstartup'
          sudo -u "${USERNAME}" chmod +x "/home/${USERNAME}/.vnc/xstartup"
          # restart VNC on :1 bound to Xvfb display
          sudo -u "${USERNAME}" vncserver -kill :1 || true
          sudo -u "${USERNAME}" vncserver :1 -geometry 1366x768 -localhost no

      - name: Install and start Tailscale
        run: |
          set -euxo pipefail
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo nohup /usr/sbin/tailscaled --state=mem: --socket=/run/tailscaled.sock >/tmp/tailscaled.log 2>&1 &
          sudo -E tailscale up --reset --authkey="${TS_AUTHKEY}" --hostname="${HOSTNAME}" --ssh
          tailscale ip || true

      - name: Show connection info
        run: |
          ts_ip4="$(tailscale ip -4 | head -n1 || echo N/A)"
          echo "===== CONNECTION INFO ====="
          echo "Tailscale IPv4: ${ts_ip4}"
          echo "Username: ${USERNAME}"
          echo "Password: (hidden)"
          echo "xRDP port: 3389 (if enabled)"
          echo "VNC  port: 5901 (if enabled)"
          echo "==========================="

      - name: Keep alive
        run: |
          mins="${{ steps.cfg.outputs.runtime }}"
          echo "Keeping alive for ${mins} minutes..."
          for i in $(seq 1 "${mins}"); do
            echo "Minute $i / ${mins} - $(date -u +%F_%T)"
            sleep 60
          done

      - name: Cleanup
        if: always()
        run: |
          sudo -u "${USERNAME}" vncserver -kill :1 || true
          sudo systemctl stop xrdp || true
