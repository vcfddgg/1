name: Ubuntu 22.04 RDP (6 hours, stable)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth Key (optional)"
        required: false
        default: ""
      ngrok:
        description: "Ngrok TOKEN or TOKEN,region (optional: us,in,eu,ap,au,sa,jp)"
        required: false
        default: ""
      crd_code:
        description: "CRD code (--code=\"4/...\" or full command) (optional)"
        required: false
        default: ""
      crd_pin:
        description: "CRD PIN (6â€“12 digits)"
        required: false
        default: "123456"

jobs:
  ubuntu_rdp:
    runs-on: ubuntu-22.04
    timeout-minutes: 370
    env:
      USERNAME: Bullettemporary
      PASSWORD: Bullet@12345
      RUNTIME_MINUTES: 355

    steps:
      - name: Install XFCE + XRDP (Jammy-stable)
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies xrdp xorgxrdp dbus-x11 x11-xserver-utils curl jq unzip

          # Create RDP user
          if ! id -u "$USERNAME" >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash "$USERNAME"
          fi
          echo "$USERNAME:$PASSWORD" | sudo chpasswd
          echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$USERNAME >/dev/null

          # XRDP session for this user
          echo "xfce4-session" | sudo tee /home/$USERNAME/.xsession >/dev/null
          sudo chown "$USERNAME:$USERNAME" /home/$USERNAME/.xsession

          # Enable and start XRDP
          sudo systemctl enable xrdp
          sudo systemctl restart xrdp xrdp-sesman

          echo "XRDP ready: user=$USERNAME pass=$PASSWORD port=3389"

      - name: Optional - Tailscale
        if: ${{ inputs.ts_authkey != '' }}
        shell: bash
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey "${{ inputs.ts_authkey }}" --hostname "ubuntu-rdp-jammy" --accept-dns=true --accept-routes=true
          tailscale ip -4 | head -n1 || true

      - name: Optional - Ngrok TCP 3389
        if: ${{ inputs.ngrok != '' }}
        shell: bash
        run: |
          set -e
          RAW="${{ inputs.ngrok }}"
          TOK=$(echo "$RAW" | cut -d',' -f1 | awk '{print $1}')
          REG=$(echo "$RAW" | cut -d',' -f2)
          [ -z "$REG" ] && REG="in"
          curl -sSL -o ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip -o ngrok.zip
          ./ngrok authtoken "$TOK"
          nohup ./ngrok tcp 3389 --region "$REG" >/tmp/ngrok.log 2>&1 &
          sleep 8
          echo "Ngrok TCP URL(s):"
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[]?.public_url' || true

      - name: Optional - Chrome Remote Desktop
        if: ${{ inputs.crd_code != '' }}
        shell: bash
        run: |
          set -e
          DEB=/tmp/crd.deb
          curl -fsSL -o "$DEB" https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
          sudo dpkg -i "$DEB" || sudo apt -f install -y
          CODE_RAW="${{ inputs.crd_code }}"
          PIN="${{ inputs.crd_pin }}"
          echo "$PIN" | grep -Eq '^[0-9]{6,12}$' || { echo "Invalid CRD PIN"; exit 1; }
          # Extract a 4/... token if full command/URL was pasted
          CODE=$(echo "$CODE_RAW" | grep -o '4/[^" ]*' | head -n1)
          [ -z "$CODE" ] && { echo "No CRD code detected"; exit 1; }
          sudo -u "$USERNAME" /opt/google/chrome-remote-desktop/start-host \
            --code="$CODE" \
            --redirect-url="https://remotedesktop.google.com/_/oauthredirect" \
            --name="ubuntu-rdp-jammy" \
            --pin="$PIN"
          sudo systemctl enable chrome-remote-desktop@$USERNAME
          sudo systemctl restart chrome-remote-desktop@$USERNAME
          echo "CRD started."

      - name: Keep alive ~6 hours
        shell: bash
        run: |
          END=$(( $(date +%s) + 60 * $RUNTIME_MINUTES ))
          while [ $(date +%s) -lt $END ]; do
            echo "alive $(date +%T)"
            sleep 60
          done
