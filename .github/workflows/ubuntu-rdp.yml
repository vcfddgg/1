name: Ubuntu RDP (Jammy â€“ XFCE fixed + Python + Tailscale/Ngrok)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth Key (optional)"
        required: false
        default: ""
      ngrok:
        description: "Ngrok TOKEN or TOKEN,region (optional: us,in,eu,ap,au,sa,jp)"
        required: false
        default: ""

jobs:
  rdp:
    runs-on: ubuntu-22.04
    timeout-minutes: 370
    env:
      USERNAME: Bullettemporary
      PASSWORD: Bullet@12345
      RUNTIME_MINUTES: 355

    steps:
      - name: Install XFCE + XRDP (failsafe fixed)
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies xrdp xorgxrdp xfconf \
            dbus-x11 dbus-user-session x11-xserver-utils policykit-1 gvfs xorg locales \
            curl unzip jq

          # Locale
          sudo locale-gen en_US.UTF-8
          echo 'LANG=en_US.UTF-8' | sudo tee /etc/default/locale >/dev/null

          # Create RDP user
          if ! id -u "$USERNAME" >/dev/null 2>&1; then
            sudo useradd -m -s /bin/bash "$USERNAME"
          fi
          echo "$USERNAME:$PASSWORD" | sudo chpasswd
          echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$USERNAME >/dev/null

          # Tell XRDP which desktop to start
          echo "xfce4-session" | sudo tee /home/$USERNAME/.xsession >/dev/null
          sudo chown "$USERNAME:$USERNAME" /home/$USERNAME/.xsession
          sudo -u "$USERNAME" touch /home/$USERNAME/.Xauthority

          # Allow XRDP to start Xorg
          echo "allowed_users=anybody" | sudo tee /etc/X11/Xwrapper.config >/dev/null

          # Ensure /run/user/<uid> exists (for user D-Bus)
          U=$(id -u "$USERNAME")
          sudo install -d -m 700 -o "$USERNAME" -g "$USERNAME" "/run/user/$U"

          # startwm.sh that launches XFCE inside a user D-Bus session
          sudo tee /etc/xrdp/startwm.sh >/dev/null <<'EOF'
#!/bin/sh
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export XDG_CONFIG_DIRS=/etc/xdg:/etc
export XDG_DATA_DIRS=/usr/share:/usr/local/share
export DESKTOP_SESSION=xfce
export XDG_CURRENT_DESKTOP=XFCE
unset DBUS_SESSION_BUS_ADDRESS

[ -z "$XDG_RUNTIME_DIR" ] && export XDG_RUNTIME_DIR="/run/user/$(id -u)"
[ -d "$XDG_RUNTIME_DIR" ] || mkdir -p "$XDG_RUNTIME_DIR"
chmod 700 "$XDG_RUNTIME_DIR" || true

# Prefer dbus-run-session; fallback to dbus-launch if needed
if command -v dbus-run-session >/dev/null 2>&1; then
  exec dbus-run-session -- /usr/bin/startxfce4
else
  exec dbus-launch xfce4-session
fi
EOF
          sudo chmod +x /etc/xrdp/startwm.sh

          # Enable XRDP
          sudo adduser xrdp ssl-cert || true
          sudo systemctl enable xrdp
          sudo systemctl restart xrdp xrdp-sesman

          echo "RDP ready: user=$USERNAME pass=$PASSWORD port=3389"

      - name: Install Python 3 + pip
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-venv python3-dev build-essential
          python3 -m pip install --upgrade pip wheel setuptools
          python3 --version && pip3 --version

      - name: Optional - Tailscale
        if: ${{ inputs.ts_authkey != '' }}
        shell: bash
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey "${{ inputs.ts_authkey }}" --hostname "ubuntu-rdp-jammy" --accept-dns=true --accept-routes=true
          echo "Tailscale IPv4: $(tailscale ip -4 | head -n1 || true)"

      - name: Optional - Ngrok TCP 3389
        if: ${{ inputs.ngrok != '' }}
        shell: bash
        run: |
          set -e
          RAW="${{ inputs.ngrok }}"
          TOK=$(echo "$RAW" | cut -d',' -f1 | awk '{print $1}')
          REG=$(echo "$RAW" | cut -d',' -f2)
          [ -z "$REG" ] && REG="in"

          curl -sSL -o ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip -o ngrok.zip
          ./ngrok authtoken "$TOK"
          nohup ./ngrok tcp 3389 --region "$REG" >/tmp/ngrok.log 2>&1 &

          # Give the API a moment, then print the tunnel URL
          sleep 8
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[]?.public_url' || true

      - name: Keep alive ~6 hours
        shell: bash
        run: |
          END=$(( $(date +%s) + 60 * ${RUNTIME_MINUTES} ))
          while [ $(date +%s) -lt $END ]; do
            echo "running $(date +%T)"
            sleep 60
          done

      - name: XRDP logs on failure
        if: failure()
        shell: bash
        run: |
          echo "--- /var/log/xrdp.log ---"
          sudo tail -n 150 /var/log/xrdp.log || true
          echo "--- /var/log/xrdp-sesman.log ---"
          sudo tail -n 150 /var/log/xrdp-sesman.log || true
