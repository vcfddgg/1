name: Ubuntu RDP + Tailscale (+ optional CRD, Ngrok)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth key (reusable or ephemeral)"
        required: true
      runtime_minutes:
        description: "Runtime minutes (5â€“360; default 355)"
        required: false
        default: "355"
      crd_code:
        description: 'Optional: CRD code 4/... or full command containing --code="4/..."'
        required: false
        default: ""
      crd_pin:
        description: "Optional: CRD PIN (6â€“12 digits)"
        required: false
        default: "123456"
      ngrok:
        description: "Optional: Ngrok TOKEN or TOKEN,region (us,in,eu,ap,au,sa,jp)"
        required: false
        default: ""

jobs:
  ubuntu_rdp:
    runs-on: ubuntu-latest   # use ubuntu-24.04 if you specifically want that image
    timeout-minutes: 370

    env:
      LNX_USER: Bullettemporary
      LNX_PASS: Bullet@12345
      CRD_CODE_RAW: ${{ inputs.crd_code }}

    steps:
      - name: Decide runtime + flags
        shell: bash
        run: |
          RT="${{ inputs.runtime_minutes }}"
          [[ -z "$RT" || "$RT" -lt 5 || "$RT" -gt 360 ]] && RT=355
          echo "RUNTIME_MINUTES=$RT" >> "$GITHUB_ENV"
          if [[ -n "${CRD_CODE_RAW}" ]]; then echo "CRD_ENABLED=1" >> "$GITHUB_ENV"; else echo "CRD_ENABLED=0" >> "$GITHUB_ENV"; fi
          echo "TS_HOSTNAME=bullet" >> "$GITHUB_ENV"

      - name: Install Desktop + XRDP (black-screen/failsafe fixed)
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies xrdp xorgxrdp xfconf dbus-x11 x11-xserver-utils curl unzip jq ca-certificates

          # Create user (case-sensitive) and set password
          if ! id -u "$LNX_USER" >/dev/null 2>&1; then sudo useradd -m -s /bin/bash "$LNX_USER"; fi
          echo "$LNX_USER:$LNX_PASS" | sudo chpasswd
          echo "$LNX_USER ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$LNX_USER

          # Ensure D-Bus and proper XDG config so xfconfd works (avoids failsafe session)
          sudo systemctl enable dbus
          sudo systemctl start dbus
          echo "export XDG_CONFIG_DIRS=/etc/xdg:/etc" | sudo tee -a /etc/environment

          # Force XFCE for XRDP sessions
          echo "xfce4-session" | sudo tee /home/$LNX_USER/.xsession >/dev/null
          echo "exec startxfce4" | sudo tee /home/$LNX_USER/.xinitrc >/dev/null
          sudo chown "$LNX_USER:$LNX_USER" /home/$LNX_USER/.xsession /home/$LNX_USER/.xinitrc

          # Make xrdp start xfce and not the failsafe shell
          sudo sed -i 's/^\s*test -r/#&/' /etc/xrdp/startwm.sh
          grep -q 'startxfce4' /etc/xrdp/startwm.sh || echo 'startxfce4' | sudo tee -a /etc/xrdp/startwm.sh >/dev/null

          # Enable & start XRDP, open firewall if UFW exists
          sudo systemctl enable xrdp
          sudo systemctl restart xrdp xrdp-sesman
          if command -v ufw >/dev/null; then sudo ufw allow 3389/tcp || true; fi

          echo "âœ… XRDP ready: user='$LNX_USER' pass='$LNX_PASS'"

      - name: Install + Up Tailscale
        shell: bash
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale logout || true
          sudo tailscale up --authkey "${{ inputs.ts_authkey }}" --hostname "$TS_HOSTNAME" --accept-dns=true --accept-routes=true
          echo "TAILSCALE_IP=$(tailscale ip -4 | head -n1)" >> "$GITHUB_ENV"
          echo "âœ… Tailscale IPv4: $(tailscale ip -4 | head -n1)"

      - name: Chrome Remote Desktop (optional)
        if: ${{ env.CRD_ENABLED == '1' }}
        shell: bash
        run: |
          set -e
          DEB=/tmp/crd.deb
          curl -fsSL -o "$DEB" https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
          sudo dpkg -i "$DEB" || sudo apt-get -f install -y

          RAW="${CRD_CODE_RAW}"
          PIN="${{ inputs.crd_pin }}"
          [[ "$PIN" =~ ^[0-9]{6,12}$ ]] || { echo "crd_pin must be 6â€“12 digits"; exit 1; }

          CODE=""
          if [[ "$RAW" =~ --code[=][:space:]*\"?([^\"[:space:]]+) ]]; then CODE="${BASH_REMATCH[1]}";
          elif [[ "$RAW" =~ ^4/ ]]; then CODE="$RAW"; fi

          if [[ -n "$CODE" ]]; then
            sudo -u "$LNX_USER" /opt/google/chrome-remote-desktop/start-host \
              --code="$CODE" \
              --redirect-url="https://remotedesktop.google.com/_/oauthredirect" \
              --name="$TS_HOSTNAME" \
              --pin="$PIN"
            sudo systemctl enable "chrome-remote-desktop@$LNX_USER"
            sudo systemctl restart "chrome-remote-desktop@$LNX_USER"
            echo "âœ… CRD host started."
          else
            echo "No CRD code detected; skipping."
          fi

      - name: Ngrok TCP 3389 (optional)
        if: ${{ inputs.ngrok != '' }}
        shell: bash
        run: |
          set -e
          IFS=',| ' read -r TOK REG <<< "${{ inputs.ngrok }}"; [[ -z "$REG" ]] && REG="in"
          curl -sSL -o ng.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip -o ng.zip
          ./ngrok authtoken "$TOK"
          nohup ./ngrok tcp 3389 --region "$REG" >/tmp/ngrok.log 2>&1 & disown
          sleep 8
          echo "ðŸ”— Ngrok tunnel(s):"
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[]?.public_url' || true

      - name: Keep alive
        shell: bash
        run: |
          END=$(( $(date +%s) + 60*${{ inputs.runtime_minutes || 355 }} ))
          while [[ $(date +%s) -lt $END ]]; do
            echo "[Ubuntu XRDP/Tailscale] $(date +%T) | TS:${TAILSCALE_IP:-n/a}"
            sleep 60
          done
