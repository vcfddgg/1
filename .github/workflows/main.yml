name: Ubuntu XRDP Fixed (No Avica)

on:
  workflow_dispatch:
    inputs:
      ts_authkey:
        description: "Tailscale Auth key"
        required: true
      runtime_minutes:
        description: "Runtime minutes (5–360; default 355)"
        required: false
        default: "355"
      crd_code:
        description: "Optional: CRD code 4/... or full command containing --code=\"4/...\""
        required: false
        default: ""
      crd_pin:
        description: "Optional: CRD PIN (6–12 digits)"
        required: false
        default: "123456"
      ngrok:
        description: "Optional: Ngrok TOKEN or TOKEN,region (us,in,eu,ap,au,sa,jp)"
        required: false
        default: ""

jobs:
  ubuntu_rdp:
    runs-on: ubuntu-24.04
    timeout-minutes: 370

    env:
      LNX_USER: Bullettemporary
      LNX_PASS: Bullet@12345
      CRD_CODE_RAW: ${{ inputs.crd_code }}

    steps:
      - name: Decide runtime + flags
        shell: bash
        run: |
          set -e
          RT="${{ inputs.runtime_minutes }}"
          if [ -z "$RT" ] || [ "$RT" -lt 5 ] || [ "$RT" -gt 360 ]; then RT=355; fi
          echo "RUNTIME_MINUTES=$RT" >> "$GITHUB_ENV"
          if [ -n "${CRD_CODE_RAW}" ]; then echo "CRD_ENABLED=1" >> "$GITHUB_ENV"; else echo "CRD_ENABLED=0" >> "$GITHUB_ENV"; fi
          echo "TS_HOSTNAME=bullet" >> "$GITHUB_ENV"

      - name: Install XFCE + XRDP (failsafe-session fix)
        shell: bash
        run: |
          set -e
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
            xfce4 xfce4-goodies xrdp xorgxrdp xfconf dbus-x11 x11-xserver-utils curl unzip jq ca-certificates

          # RDP user
          if ! id -u "$LNX_USER" >/dev/null 2>&1; then sudo useradd -m -s /bin/bash "$LNX_USER"; fi
          echo "$LNX_USER:$LNX_PASS" | sudo chpasswd
          echo "$LNX_USER ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$LNX_USER >/dev/null

          # D-Bus + XDG
          sudo systemctl enable dbus
          sudo systemctl start dbus
          if ! grep -q '^XDG_CONFIG_DIRS=' /etc/environment; then
            echo 'XDG_CONFIG_DIRS=/etc/xdg:/etc' | sudo tee -a /etc/environment >/dev/null
          fi

          # .Xauthority
          sudo -u "$LNX_USER" touch "/home/$LNX_USER/.Xauthority"
          sudo chown "$LNX_USER:$LNX_USER" "/home/$LNX_USER/.Xauthority"

          # Minimal startwm.sh (no heredoc, no weird quotes)
          sudo bash -c 'printf "%s\n" \
            "#!/bin/sh" \
            "export XDG_CONFIG_DIRS=/etc/xdg:/etc" \
            "export DESKTOP_SESSION=xfce" \
            "export XDG_CURRENT_DESKTOP=XFCE" \
            "unset DBUS_SESSION_BUS_ADDRESS" \
            "exec startxfce4" > /etc/xrdp/startwm.sh'
          sudo chmod +x /etc/xrdp/startwm.sh

          # Per-user defaults (extra safety)
          echo "xfce4-session" | sudo tee /home/$LNX_USER/.xsession >/dev/null
          echo "exec startxfce4" | sudo tee /home/$LNX_USER/.xinitrc >/dev/null
          sudo chown "$LNX_USER:$LNX_USER" /home/$LNX_USER/.xsession /home/$LNX_USER/.xinitrc

          # Enable XRDP
          sudo adduser xrdp ssl-cert || true
          sudo systemctl enable xrdp
          sudo systemctl restart xrdp xrdp-sesman
          if command -v ufw >/dev/null; then sudo ufw allow 3389/tcp || true; fi

          echo "XRDP ready: user='$LNX_USER'  pass='$LNX_PASS'"

      - name: Install + Up Tailscale
        shell: bash
        run: |
          set -e
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale logout || true
          sudo tailscale up --authkey "${{ inputs.ts_authkey }}" --hostname "$TS_HOSTNAME" --accept-dns=true --accept-routes=true
          TSIP="$(tailscale ip -4 | head -n1 || true)"
          echo "TAILSCALE_IP=$TSIP" >> "$GITHUB_ENV"
          echo "Tailscale IPv4: ${TSIP:-n/a}"

      - name: Chrome Remote Desktop (optional)
        if: ${{ env.CRD_ENABLED == '1' }}
        shell: bash
        run: |
          set -e
          DEB=/tmp/crd.deb
          curl -fsSL -o "$DEB" https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb
          sudo dpkg -i "$DEB" || sudo apt-get -f install -y

          RAW="${CRD_CODE_RAW}"
          PIN="${{ inputs.crd_pin }}"
          echo "$PIN" | grep -Eq '^[0-9]{6,12}$' || { echo "crd_pin must be 6–12 digits"; exit 1; }

          CODE=""
          if echo "$RAW" | grep -Eo '--code="?[^"[:space:]]+' >/dev/null; then
            CODE="$(echo "$RAW" | sed -n 's/.*--code="?([^"[:space:]]*).*/\1/p' | head -n1)"
          elif echo "$RAW" | grep -Eq '^4/'; then
            CODE="$RAW"
          fi

          if [ -n "$CODE" ]; then
            sudo -u "$LNX_USER" /opt/google/chrome-remote-desktop/start-host \
              --code="$CODE" \
              --redirect-url="https://remotedesktop.google.com/_/oauthredirect" \
              --name="$TS_HOSTNAME" \
              --pin="$PIN"
            sudo systemctl enable "chrome-remote-desktop@$LNX_USER"
            sudo systemctl restart "chrome-remote-desktop@$LNX_USER"
            echo "CRD host started."
          else
            echo "No CRD code detected; skipping CRD."
          fi

      - name: Ngrok TCP 3389 (optional)
        if: ${{ inputs.ngrok != '' }}
        shell: bash
        run: |
          set -e
          RAW="${{ inputs.ngrok }}"
          TOK="$(echo "$RAW" | cut -d',' -f1 | cut -d'|' -f1 | awk '{print $1}')"
          REG="$(echo "$RAW" | cut -d',' -f2 | cut -d'|' -f2)"
          [ -z "$REG" ] && REG="in"
          curl -sSL -o ng.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip -o ng.zip
          ./ngrok authtoken "$TOK"
          nohup ./ngrok tcp 3389 --region "$REG" >/tmp/ngrok.log 2>&1 & disown
          sleep 8
          echo "Ngrok tunnels:"
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[]?.public_url' || true

      - name: Keep alive
        shell: bash
        run: |
          END=$(( $(date +%s) + 60*${RUNTIME_MINUTES} ))
          while [ $(date +%s) -lt $END ]; do
            echo "[Ubuntu XRDP/Tailscale] $(date +%T) | TS:${TAILSCALE_IP:-n/a}"
            sleep 60
          done
